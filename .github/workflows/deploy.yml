name: Python application

on:
  schedule:
    - cron:  '*/15 * * * *'
  watch:
    types: [started]

jobs:
  build:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools twine pip wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Check for update
      id: check
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        python update_formula.py
        output=$(python update_formula.py)
        echo $output | grep "Updating figgy.rb" && echo "::set-output name=updated::true" || true

    - name: Commit changes
#      if: steps.check.outputs.updated == 'true'
      uses: EndBug/add-and-commit@v4
      with:
        author_name: Jordan
        author_email: jordan@figgy.dev
        message: "Releasing new version"
        add: "*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
#      if: steps.check.outputs.updated == 'true'
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        pip install awscli
        mkdir -p ~/.aws
        echo "[default]\nregion = us-east-1\noutput = json" > ~/.aws/config
        version=$(python get_version.py)
        bash release.sh ${version}
